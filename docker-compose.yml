version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: app/Dockerfile
      network: host
    image: app_max:latest
    container_name: app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - IMAGES_DIR=${IMAGES_DIR}
      - AUTH_IMAGES_DIR=${AUTH_IMAGES_DIR}

    volumes:
      - ./images:/app/uploads/images
      - ./app/logs:/var/log/app
      - ./auth_images:/app/auth_images
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - app_network

  db:
    container_name: db
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - app_network

  redis:
    container_name: redis
    image: redis:6
    ports:
      - "6379:6379"
    networks:
      - app_network

volumes:
  images:

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.0.0/24
          gateway: 10.10.0.1
